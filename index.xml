<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome to the BakkesMod Programming Wiki! on BakkesMod Programming Wiki</title>
    <link>https://bakkesmodwiki.github.io/</link>
    <description>Recent content in Welcome to the BakkesMod Programming Wiki! on BakkesMod Programming Wiki</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://bakkesmodwiki.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setup your installs</title>
      <link>https://bakkesmodwiki.github.io/plugin_tutorial/getting_started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/plugin_tutorial/getting_started/</guid>
      <description>Trying to get into making plugins for the first time? There&amp;rsquo;s some super useful tools out there! These steps should get you started on the path towards development.
Note these instructions are designed for Windows 10 (and presumably 11). Rocket League is Windows exclusive, so this is the easiest way to develop for it. If you really want to use linux, it will be harder but may still be possible</description>
    </item>
    
    <item>
      <title>Using Function Hooks</title>
      <link>https://bakkesmodwiki.github.io/functions/using_function_hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/functions/using_function_hooks/</guid>
      <description>Function hooks are a powerful part of BakkesMod. After a function is hooked, any time it is called by Rocket League, your code is called as well.
There are multiple types of hooks. First are the two simpler ones. gameWrapper is a GameWrapper and will be accessible from any point in your code.
gameWrapper-&amp;gt;HookEvent(&amp;#34;Function TAGame.Car_TA.SetVehicleInput&amp;#34;, [this](std::string eventName) { // Your Code here  // Call another function or just do your things here }); gameWrapper-&amp;gt;HookEventPost(&amp;#34;Function TAGame.</description>
    </item>
    
    <item>
      <title>Function Scanner</title>
      <link>https://bakkesmodwiki.github.io/functions/function_scanner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/functions/function_scanner/</guid>
      <description>Trying to hook an event but don&amp;rsquo;t know what event to use? There&amp;rsquo;s way more events out there than can be documented, so you can find one yourself with the function scanner
I highly recommend this video I made to understand how to use it, but there&amp;rsquo;s also a text guide below https://www.youtube.com/watch?v=gDZ1wWKE8aw&amp;nbsp;
Set the -dev option    On Steam: Right click the game and hit properties Then add the option On Epic: (They&amp;rsquo;ve moved this before so @ me if it&amp;rsquo;s in a new place)</description>
    </item>
    
    <item>
      <title>Starting a plugin</title>
      <link>https://bakkesmodwiki.github.io/plugin_tutorial/starting_a_plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/plugin_tutorial/starting_a_plugin/</guid>
      <description>It will assume you&amp;rsquo;re using the template as linked in Setting Up. You can of course make a plugin without it, but it gives an easier basis to work off of. You can name it anything, but here we&amp;rsquo;ll be using a demo plugin named CoolPlugin
The template has a lot of commented out code that is designed to help you learn how to use the syntax, but is ignored for the purposes of this tutorial</description>
    </item>
    
    <item>
      <title>Commonly Hooked Functions</title>
      <link>https://bakkesmodwiki.github.io/functions/commonly_hooked_functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/functions/commonly_hooked_functions/</guid>
      <description>This is a list of functions that we use regularly, as well as when they fire. We&amp;rsquo;ll never be able to document them all but hopefully this helps. Hook them with Function Hooks
&amp;quot;Function TAGame.Car_TA.SetVehicleInput&amp;quot; This event is called every physics tick while you are playing. This is 120 times per second. This can be highly useful but isn&amp;rsquo;t perfect. It doesn&amp;rsquo;t fire while spectating matches. While hosting a match it fires once per tick per car in the match.</description>
    </item>
    
    <item>
      <title>Plugin Variables</title>
      <link>https://bakkesmodwiki.github.io/plugin_tutorial/plugin_variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/plugin_tutorial/plugin_variables/</guid>
      <description>Next we will make your plugin alterable by a user. They might want to enable/disable the plugin, change how it acts, and pretty much infinite options. I&amp;rsquo;ll be using a fairly simple plugin I&amp;rsquo;ve made as an example. I&amp;rsquo;ll only be focusing on the settings, not the actual code that makes it work. We&amp;rsquo;ll continue the CoolPlugin from Starting a Plugin
We give the users control with the Console Variables, CVars.</description>
    </item>
    
    <item>
      <title>Hook Event With Any Caller</title>
      <link>https://bakkesmodwiki.github.io/functions/hook_event_with_any_caller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/functions/hook_event_with_any_caller/</guid>
      <description>Add this to your plugin header and you can hook with caller for &amp;ldquo;anything&amp;rdquo;. This will do a blind cast, so make absolutely sure you&amp;rsquo;re hooking the right function or you will crash. There are no type checks here!
template &amp;lt;typename T, typename std::enable_if&amp;lt;std::is_base_of&amp;lt;ObjectWrapper, T&amp;gt;::value&amp;gt;::type*&amp;gt; void GameWrapper::HookEventWithCaller(std::string eventName, std::function&amp;lt;void(T caller, void* params, std::string eventName)&amp;gt; callback) { auto wrapped_callback = [callback](ActorWrapper caller, void* params, std::string eventName) { callback(T(caller.memory_address), params, eventName); }; HookEventWithCaller&amp;lt;ActorWrapper&amp;gt;(eventName, wrapped_callback); } And this for Post</description>
    </item>
    
    <item>
      <title>Plugin Interface</title>
      <link>https://bakkesmodwiki.github.io/plugin_tutorial/plugin_interface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/plugin_tutorial/plugin_interface/</guid>
      <description>This channel will go over creating a user-friendly interface. There&amp;rsquo;s buttons, sliders, checkboxes, dropdowns, and all sorts of options. It also assumes you&amp;rsquo;re using the template, as the template automatically includes the ImGui GUI library we&amp;rsquo;ll be using. It will ignore the fact that there is some commented out code in CoolPluginGUI.cpp.
Yet again we have the CoolPlugin from Plugin Variables and we want to add a button to activate our cooler ball on top, a checkbox to enable cool, and a slider to choose the distance that the ball is placed from your car</description>
    </item>
    
    <item>
      <title>Code Snippet Example</title>
      <link>https://bakkesmodwiki.github.io/code_snippets/code_snippet_example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/code_snippets/code_snippet_example/</guid>
      <description>If you want to add a new snippet to the page, simply make a code snippet in this folder like this
Give your snippet a unique name and send the pull request!
The filename will be the name of the page, with _ replaced with spaces and automatic proper capitalization
Everything is written in Markdown
Make code blocks using Markdown
```cpp
// code here
```
becomes
// code here </description>
    </item>
    
    <item>
      <title>Crash Dumps</title>
      <link>https://bakkesmodwiki.github.io/useful_info/crash_dumps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/useful_info/crash_dumps/</guid>
      <description>Modding RL is finnicky. You&amp;rsquo;re going to crash the game at some point. This will tell you how to learn from a crash and solve your issue.
Crashes are often logged in .dmp files. They are found at My Documents/My Games/rocketleague/TAGame/Logs
Unfortunately sometimes there is no .dmp file. That often means you crashed in a non-game thread, like rendering or websockets. For those you might just need to do some logging to find out where you crashed</description>
    </item>
    
    <item>
      <title>Creating an ImageWrapper</title>
      <link>https://bakkesmodwiki.github.io/code_snippets/creating_image_wrapper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/code_snippets/creating_image_wrapper/</guid>
      <description>Creating an ImageWrapper     You should use some kind of reference type that manages the memory. std::shared_ptr&amp;lt;ImageWrapper&amp;gt; is my recommendation. The constructor takes 3 arguments (2 are optional) The optional arguments are two bools that decide if the core will preload the images for use in the canvas\imgui. The ImageWrapper is a resource managing class. This means that you have to keep this object &amp;ldquo;alive&amp;rdquo; as long as you want to use the image.</description>
    </item>
    
    <item>
      <title>GitHub Plugin Template</title>
      <link>https://bakkesmodwiki.github.io/useful_info/github_plugin_template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/useful_info/github_plugin_template/</guid>
      <description>As an easier alternative to the traditional Visual Studio template, you can use this other template to make a plugin. https://github.com/Martinii89/BakkesmodPluginTemplateV2&amp;nbsp;
Instructions copied from the README:
Create a repository from this template     Click the big green button Use this template or click here&amp;nbsp;. Enter a Repository name and click Create repository from template Head over to the created repository and complete the setup.  Complete setup     In the a new repository, complete the project setup by editing the cookiecutter.</description>
    </item>
    
    <item>
      <title>How CVars Work</title>
      <link>https://bakkesmodwiki.github.io/code_snippets/how_cvars_work/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/code_snippets/how_cvars_work/</guid>
      <description>In plugin onLoad(), registerCVar is called and the cvar will have default values
cvar values are only changed when a config file is executed, or a console command is fired. It doesn&amp;rsquo;t magically &amp;ldquo;remember&amp;rdquo; values from previous runs or anything.
On BM startup, it&amp;rsquo;ll execute plugins.cfg first to load all plugins, causing all cvars for these plugins to be created. Then once this is done it will execute config.cfg, which will set the actual saved value.</description>
    </item>
    
    <item>
      <title>Known Playlist IDs</title>
      <link>https://bakkesmodwiki.github.io/code_snippets/playlist_id/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/code_snippets/playlist_id/</guid>
      <description>All (known) playlist IDs - 2020
1: Duel 2: Doubles 3: Standard 4: Chaos 6: Private Match 7: Season 8: Exhibition 9: Training 10: Duel (Ranked) 11: Doubles (Ranked) 13: Standard (Ranked) 15: Snow Day 16: Rocket Labs 17: Hoops 18: Rumble 19: Workshop 20: Custom Training Editor 21: Custom Training 22: Tournament Match (Custom) 23: Dropshot 24: Local Match 26: External Match (Ranked) 27: Hoops (Ranked) 28: Rumble (Ranked) 29: Dropshot (Ranked) 30: Snow Day (Ranked) 31: Ghost Hunt 32: Beach Ball 33: Spike Rush 34: Tournament Match (Automatic) 35: Rocket Labs 37: Dropshot Rumble 38: Heatseeker 41: Boomer Ball 43: Heatseeker Doubles 44: Winter Breakaway 46: Gridiron 47: Super Cube 48: TacticalRumble Find the ID of the current playlist with</description>
    </item>
    
    <item>
      <title>Multiplayer Plugins</title>
      <link>https://bakkesmodwiki.github.io/useful_info/multiplayer_plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/useful_info/multiplayer_plugins/</guid>
      <description>Netcode plugins are a powerful way to handle asymmetrical multiplayer plugins. It can allow clients to control the match, when normally only the host can. This is much better described in this video by CinderBlock
https://youtu.be/jyFuN8k2uIs&amp;nbsp;
If you want to make your own netcode plugin, there&amp;rsquo;s a template for it just like normal plugins. It does all the setup shown in the above video automatically. Follow the README to install it</description>
    </item>
    
    <item>
      <title>Other Languages</title>
      <link>https://bakkesmodwiki.github.io/useful_info/other_languages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/useful_info/other_languages/</guid>
      <description>There&amp;rsquo;s a couple super useful libraries that let you write plugins in other programming languages. We can&amp;rsquo;t really guarantee any tutorials in this server as we don&amp;rsquo;t have anyone with much experience in them. If you use them feel free to add help and make a pull request. You&amp;rsquo;re still welcome to ask for help with them in the discord&amp;nbsp;, but most people here use the standard C++ library and it may be hard to get specific help</description>
    </item>
    
    <item>
      <title>Plugin Exclusive Logging</title>
      <link>https://bakkesmodwiki.github.io/code_snippets/plugin_exclusive_logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/code_snippets/plugin_exclusive_logging/</guid>
      <description>Want to see the console logging from just your plugin? Open a new PowerShell window and use this command (It may require git for windows https://gitforwindows.org/&amp;nbsp;)
Get-Content (-join($env:APPDATA, &amp;quot;\bakkesmod\bakkesmod\bakkesmod.log&amp;quot;)) -wait -tail 1 | select-string -pattern &amp;quot;PLUGIN_NAME&amp;quot; </description>
    </item>
    
    <item>
      <title>Plugin Types</title>
      <link>https://bakkesmodwiki.github.io/code_snippets/plugin_types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/code_snippets/plugin_types/</guid>
      <description>All Plugin Types
PLUGINTYPE_FREEPLAY = 0x01, // Does nothing  PLUGINTYPE_CUSTOM_TRAINING = 0x02, // see above  PLUGINTYPE_SPECTATOR = 0x04, // see above  PLUGINTYPE_BOTAI = 0x08, // see above  PLUGINTYPE_REPLAY = 0x10, // see above  PLUGINTYPE_THREADED = 0x20, // OnLoad is called in it&amp;#39;s own thread  PLUGINTYPE_THREADEDUNLOAD = 0x40 // Unload is called in it&amp;#39;s own thread </description>
    </item>
    
    <item>
      <title>Submitting to Bakkesplugins</title>
      <link>https://bakkesmodwiki.github.io/useful_info/submitting_to_bakkesplugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/useful_info/submitting_to_bakkesplugins/</guid>
      <description>You&amp;rsquo;ve looked through the docs in desperation, angrily screamed at your computer, crashed a couple times, but it&amp;rsquo;s all worth it! You have made a super cool plugin that you want to share! Nice job!
Plugins are officially hosted at https://bakkesplugins.com/&amp;nbsp;. Go there and sign up for an account. Please make the username similar to a discord or github you can be contacted at.
Once you&amp;rsquo;re logged in, hover over your name in the top right, hit Account, and then hit Add New Plugin</description>
    </item>
    
    <item>
      <title>Toasts</title>
      <link>https://bakkesmodwiki.github.io/code_snippets/toasts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/code_snippets/toasts/</guid>
      <description>Toasts are cool little popups that show on the top right of your game
These are useful for quick notifications that you want to disappear quickly
First you need to enable them in f2 - Misc - Enable notifications
Watch out though! Every user also has to enable this, so make sure your plugin page or interface is quite clear that this is necessary
Now to the code
Make a toast pop up with GameWrapper.</description>
    </item>
    
    <item>
      <title>Troubleshooting Bakkesmod</title>
      <link>https://bakkesmodwiki.github.io/useful_info/troubleshooting_bakkesmod/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/useful_info/troubleshooting_bakkesmod/</guid>
      <description>Made it here because your BakkesMod isn&amp;rsquo;t working? No worries, check this other wiki here
https://bakkesmod.fandom.com/wiki/Troubleshooting&amp;nbsp;</description>
    </item>
    
    <item>
      <title>Useful Links</title>
      <link>https://bakkesmodwiki.github.io/useful_info/useful_links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/useful_info/useful_links/</guid>
      <description>Here&amp;rsquo;s some links that we couldn&amp;rsquo;t find a good place for
Creating a .set file https://bakkesmod.fandom.com/wiki/Plugin_settings_files&amp;nbsp;
ImGui demo https://pthom.github.io/imgui_manual_online/manual/imgui_manual.html&amp;nbsp;
ImGui builder program https://github.com/Code-Building/ImGuiBuilder&amp;nbsp;
Useful game values (map size, boost locations, etc.) https://github.com/RLBot/RLBot/wiki/Useful-Game-Values&amp;nbsp;
UDK site for canvas. The BM CanvasWrapper has some of these features https://docs.unrealengine.com/udk/Three/CanvasTechnicalGuide.html&amp;nbsp;
CanvasWrapper library for improved tools https://github.com/CinderBlocc/RenderingTools&amp;nbsp;</description>
    </item>
    
    <item>
      <title>Using HttpWrapper</title>
      <link>https://bakkesmodwiki.github.io/code_snippets/using_http_wrapper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bakkesmodwiki.github.io/code_snippets/using_http_wrapper/</guid>
      <description>HttpWrapper    Sending a simple http request with a string body    CurlRequest req; req.url = &amp;#34;https://httpbin.org/anything&amp;#34;; req.body = &amp;#34;testing with body&amp;#34;; LOG(&amp;#34;sending body request&amp;#34;); HttpWrapper::SendCurlRequest(req, [this](int code, std::string result) { LOG(&amp;#34;Body result{}&amp;#34;, result); }); Perform an HTTP/S JSON request    CurlRequest req; req.url = &amp;#34;https://httpbin.org/anything&amp;#34;; req.body = R&amp;#34;T({ &amp;#34;userId&amp;#34;: 1, &amp;#34;id&amp;#34;: 1, &amp;#34;title&amp;#34;: &amp;#34;delectus aut autem&amp;#34;, &amp;#34;completed&amp;#34;: false })T&amp;#34;; HttpWrapper::SendCurlJsonRequest(req, [this](int code, std::string result) { LOG(&amp;#34;Json result{}&amp;#34;, result); }); Sending a file over HTTP/S    { CurlRequest req; req.</description>
    </item>
    
  </channel>
</rss>
